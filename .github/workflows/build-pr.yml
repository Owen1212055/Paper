# Here lie dragons!
#
# This action either builds the server or
# builds a paperclip jar to be updated in the body
# of the PR relating to this action.

name: Build Paper Pull Request
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - labeled

jobs:
  setup:
    permissions:
      actions: write
    if: >
      (
        (github.event_name == 'pull_request' && contains(fromJSON('["opened", "reopened", "synchronize"]'), github.event.action))
        || (github.event_name == 'pull_request' && github.event.action == 'labeled' && github.event.label.name == 'publish-pr')
        || (github.event_name == 'pull_request' && github.event.action == 'labeled' && github.event.label.name == 'publish-diff')
      )

    runs-on: ubuntu-latest
    outputs:
      paperclip: ${{ fromJSON(steps.determine.outputs.result).paperclip }}
      diffpublish: ${{ fromJSON(steps.determine.outputs.result).diffpublish }}
    steps:
      - name: Configure Build
        uses: actions/github-script@v7
        id: determine
        env:
          REF_NAME: "${{ github.ref_name }}"
          REF_TYPE: "${{ github.ref_type }}"
          EVENT: "${{ toJSON(github.event) }}"
          EVENT_TYPE: "${{ github.event_name }}"
        with:
          result-encoding: json
          script: |
            const {owner, repo} = context.repo;
            const event_name = `${process.env.EVENT_TYPE}`;
            const event = JSON.parse(`${process.env.EVENT}`);
            const ref_type = `${process.env.REF_TYPE}`;
            const ref_name = `${process.env.REF_NAME}`;
            const result = {
              paperclip: false,
              diffpublish: false
            };
            
            function processLabels(pr) {
              const names = pr.labels.map(l => l.name);
              if (names.includes("publish-pr"))   result.paperclip    = true;
              if (names.includes("publish-diff")) result.diffpublish = true;
            }
            
            const marker_labels = ["publish-pr", "publish-diff"];
            
            if (event_name === "pull_request" && event.pull_request.labels.some(l => marker_labels.includes(l.name))) {
              processLabels(event.pull_request);
              core.notice(`This is a pull request action with a build marker label (${JSON.stringify(result)})`);
              return result;
            }
            core.notice("This has no marker labels, so modifications to build will occur.");
            return result;
  build:
    name: Build Paper
    needs: setup
    runs-on: ubuntu-latest
    permissions:
      checks: write
    steps:
      - name: Checkout action meta
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            .github
      - name: Initialize Workspace
        uses: ./.github/actions/init-workspace
      - name: Build
        run: ./gradlew build --stacktrace
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          event_file: ${{ github.event_path }}
          event_name: ${{ github.event_name }}
          files: "**/build/test-results/test/TEST-*.xml"
          comment_mode: off
  diffpublish:
    name: Generate Diff Patch
    needs: setup
    runs-on: ubuntu-latest
    if: ${{ needs.setup.outputs.diffpublish == 'true' }}
    steps:
      - name: Checkout action meta
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            .github
      - name: Initialize Workspace
        uses: ./.github/actions/init-workspace
      - name: Checkout base branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.base.sha }}
          path: base
      - name: Apply Patches for Base Repository
        working-directory: base
        run: |
          git config --global user.email "no-reply@github.com"
          git config --global user.name "GitHub Actions"
          ./gradlew applyPatches --stacktrace
      - name: Generate raw diff
        run: |
          diff \
            --unified=3 \
            --recursive \
            --exclude='.git' \
            --exclude='.mcassetsroot' \
            base/paper-server/src/minecraft/java \
            paper-server/src/minecraft/java \
            > raw.diff \
            || true
      - name: Import diff into index
        run: |
          git apply \
            --directory=base/paper-server \
            raw.diff
      - name: Commit imported diff
        working-directory: 'base/paper-server/src/minecraft/java'
        run: |
          git add .
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git commit -m "Import directory diff for patch generation"
      - name: Create patch
        working-directory: 'base/paper-server/src/minecraft/java'
        run: |
          git format-patch -1 HEAD \
            --stdout \
            -- . \
          > patch-${{ github.event.pull_request.number }}.patch

      - name: Upload patch to pastes.dev
        id: paste
        run: |
          paste_url=$(curl -s -T base/paper-server/src/minecraft/java/patch-${{ github.event.pull_request.number }}.patch \
          -H "Content-Type: text/x-diff" \
          https://api.pastes.dev/post)
          echo "paste_url=$paste_url" >> $GITHUB_OUTPUT
      - name: Find existing Diff Viewer comment
        uses: peter-evans/find-comment@v3
        id: find_comment
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: '<!-- bot: paperclip-pr-build -->'
      - name: Create or update Diff Viewer comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ steps.find_comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          edit-mode: replace
          body: |
            <!-- bot: paperclip-pr-build -->
            ## üñáÔ∏è Patch Diff Viewer
            Head over to [diffs.dev](https://diffs.dev), and paste in the URL below to view an enhanced view of the diff:
            ${{ steps.paste.outputs.paste_url }}

            *Last updated for: ${{ github.event.pull_request.head.sha }}*

  paperclip:
    name: Create & Publish Paperclip
    needs: setup
    runs-on: ubuntu-latest
    if: ${{ needs.setup.outputs.paperclip == 'true' }}
    permissions:
      packages: write # To upload the PR
      actions: write # To get information about the uploading workflow run and to delete the run artifacts
      contents: write # To download the `maven-publish` artifact, and to be able to create commit comments
      issues: write # To be able to create PR comments
      pull-requests: write # To be able to create PR comments
    steps:
      - name: Checkout action meta
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            .github
      - name: Initialize Workspace
        uses: ./.github/actions/init-workspace
      - name: Create Paperclip Jar
        run: ./gradlew createMojmapPaperclipJar --stacktrace
      - name: Upload Paperclip Jar
        uses: actions/upload-artifact@v4
        with:
          name: paper-${{ github.event.pull_request.number }}
          path: paper-server/build/libs/paper-paperclip-*-mojmap.jar
      - name: Publish Artifacts
        uses: PaperMC/action-pr-publishing/upload@paper
        with:
          publishing-task: ":paper-api:publishAllPublicationsTo_githubPackages_PRsRepository publishDevBundlePublicationTo_githubPackages_PRsRepository -PpublishDevBundle"
      - name: Generate an Application repository access token
        id: gen_repo_token
        uses: kattecon/gh-app-access-token-gen@v1
        with:
          app_id: 1408328
          private_key: ${{ secrets.PR_PUBLISHING_GH_APP_KEY }}
          repository: ${{ github.repository }}
      - name: Publish PR
        uses: PaperMC/action-pr-publishing@paper
        env:
          GITHUB_TOKEN: ${{ steps.gen_repo_token.outputs.token }}
        with:
          publishing-token: ${{ github.token }}
          uploader-workflow-name: Build Paper Pull Request
          artifacts-base-path: io/papermc/paper
          base-maven-url: 'https://maven-prs.papermc.io'
          self-name: 'papermc-pr-publishing[bot]'
  clean:
    name: "Cleanup"
    if: always()
    runs-on: ubuntu-latest
    needs:
      - paperclip
      - diffpublish
      - build
    steps:
      - name: Checkout action meta
        uses: actions/checkout@v4
        with:
          sparse-checkout: |

      # We want to remove the push workflow generated by this push. This is just for cleanliness and does basically nothing.
      - name: Delete Push Workflow
        uses: iamazeem/delete-workflow-runs-action@v1
        with:
          commit-sha: ${{ github.event.pull_request.head.sha || github.sha }}
          keep: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          event: 'push'
          # status: 'completed'
          # workflow: 'build.yml' Runs created by organization and enterprise ruleset workflows will not display a workflow name due to GitHub API limitations.